defaults:
  - unida_runs:
    - models: LEAD
    - datasets: Office
    - transfers: all 
    - settings: OSDA
    - corruption: No
  - tta_runs:
    - unida_models: DANCE
    - tta_models: STAMP 
    - datasets: Office, VisDA
    - transfers: all
    - settings: OSDA 

tags: [0, 1]
device: cuda
train: False # default is False as we only evaluate the models

ckpt_path: ${hydra:runtime.cwd}/eval_ckpts/

eval:
  metrics: [Accuracy, H-Score] # H-Score won't be calculated in PDA (no unknown predictions)

logging:
  wandb: True
  wandb_project_name: unida-tta-exps

dataset:
  data_path: ${hydra:runtime.cwd}/data/

cwd: ${hydra:runtime.cwd} 

unida_runs:
  - model_paths:
    - DANCE: "/home/sgw3fy/jobs/ttda_jobs/DANCE/checkpoints"
    - DCC: "/home/sgw3fy/jobs/ttda_jobs/Domain-Consensus-Clustering/snapshot"
    - OVANet: "/home/sgw3fy/jobs/ttda_jobs/OVANet/checkpoints"
    - UniOT: ""
    - GLC: "/home/sgw3fy/jobs/ttda_jobs/GLC/checkpoints_glc"
    - LEAD: "/home/sgw3fy/jobs/ttda_jobs/LEAD/checkpoints"


# tta_runs:
  # defines the runs for TTA models
  # for transfers and corruptions, the default is all, but the codes
  # will be modified to support specific ones if needed
  # - unida_models: DANCE # DANCE, DCC, OVANet, UniOT, GLC, LEAD
  # - tta_models: STAMP # TENT, CoTTA, SAR, EATA, SoTTA, OWTTT, RoTTA, STAMP 
  # - datasets: Office, VisDA # Office, OfficeHome, VisDA, DomainNet
  # - transfers: all 
  # - settings: PDA, OSDA # PDA, OSDA, OPDA
  

hydra:
  sweeper:
    params:
      unida: True   # default is True (run all combinations for UniDA)
      # the following parameters are defined solely in the sweeper params
      unida_runs.models: ["LEAD", "DANCE"]
      unida_runs.datasets: ["Office", "OfficeHome"]
      unida_runs.transfers: ["all"]
      unida_runs.settings: ["PDA", "OSDA"]
      unida_runs.corruption: ["False", "True"]

      tta: False
      # tta_runs.unida_models: ${tta_runs[0].unida_models}
      # tta_runs.tta_models: ${tta_runs[1].tta_models}
      # tta_runs.datasets: ${tta_runs[2].datasets}
      # tta_runs.transfers: ${tta_runs[3].transfers}
      # tta_runs.settings: ${tta_runs[4].settings}

  launcher:
    submitit_folder: ${hydra.sweep.dir}/.submitit/%j
    timeout_min: 3
    cpus_per_task: 4
    gpus_per_node: null
    tasks_per_node: 1
    mem_gb: 1
    nodes: 1
    name: ${hydra.job.name}
    _target_: hydra_plugins.hydra_submitit_launcher.submitit_launcher.SlurmLauncher
    partition: gpu
    qos: null
    comment: null
    constraint: null
    exclude: null
    gres: null
    cpus_per_gpu: null
    gpus_per_task: 1
    mem_per_gpu: null
    mem_per_cpu: null
    account: hpc_training
    signal_delay_s: 120
    max_num_timeout: 0
    additional_parameters:
      output: "unida_tta_m-${unida_runs[0].models}_d-${unida_runs[1].datasets}_s-${unida_runs[3].settings}_${tta}.log"
      error:  "unida_tta_m-${unida_runs[0].models}_d-${unida_runs[1].datasets}_s-${unida_runs[3].settings}_${tta}.log"
    array_parallelism: 256
    setup: null
